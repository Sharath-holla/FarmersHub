<% layout('layouts/boilerplate') %>

<!-- Add custom CSS -->
<style>
    /* General Reset */
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Arial', sans-serif;
    }

    /* Full-Space Navbar */
    .navbar {
        background: linear-gradient(90deg, #009688, #4caf50);
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px 30px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
        position: sticky;
        top: 0;
        left: 0;
        width: 100%;
        z-index: 1000;
    }

    .navbar-brand {
        color: #ffffff;
        text-decoration: none;
        font-size: 1.8rem;
        font-weight: bold;
        transition: color 0.3s ease;
    }

    .navbar-brand:hover {
        color: #e0f2f1;
    }

    .nav-links {
        display: flex;
        list-style: none;
        margin-left: auto; /* Center the navbar items */
    }

    .nav-item {
        margin-left: 20px;
    }

    .nav-item a {
        text-decoration: none;
        color: #ffffff;
        font-size: 1rem;
        position: relative;
        padding: 5px 10px;
        transition: color 0.3s ease, transform 0.3s ease;
    }

    .nav-item a:hover {
        color: #e0f2f1;
        transform: translateY(-3px);
    }

    /* Cards in a Row */
    .card-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 20px;
        margin: 20px auto;
        max-width: 1200px;
    }

    .card {
        background: #f9fcff;
        border: none;
        border-radius: 15px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        overflow: hidden;
        width: 300px;
    }

    .card:hover {
        transform: translateY(-10px);
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
    }

    .card img {
        object-fit: cover;
        width: 100%;
        height: 200px;
    }

    .card-body {
        padding: 20px;
    }

    .card-title {
        color: #009688;
        font-weight: bold;
        font-size: 1.5rem;
    }

    .card-text {
        color: #555;
        font-size: 0.9rem;
        margin-bottom: 10px;
    }

    .btn-outline-primary {
        display: block;
        text-align: center;
        color: #009688;
        border: 2px solid #009688;
        padding: 10px;
        border-radius: 5px;
        text-decoration: none;
        font-weight: bold;
        transition: all 0.3s ease;
    }

    .btn-outline-primary:hover {
        background: #4caf50;
        color: #ffffff;
    }

    /* Map Styling */
    .map-container {
    width: 100%;
    height: 400px;
    margin-top: 30px;
    background-color: #e0e0e0;
    border-radius: 8px;
    border: 2px solid #4caf50; /* Green border */
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2), 0 4px 8px rgba(76, 175, 80, 0.3); /* Green shadow effect */
}



    /* Footer */
    .footer {
        background: linear-gradient(90deg, #009688, #4caf50);
        color: #ffffff;
        text-align: center;
        padding: 10px 0;
        width: 100%;
        position: relative;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
        .navbar {
            flex-direction: column;
            align-items: flex-start;
        }

        .nav-links {
            flex-direction: column;
            width: 100%;
            margin-left: 0;
        }

        .nav-item {
            margin-left: 0;
            margin-bottom: 10px;
        }

        .card-container {
            flex-direction: column;
            align-items: center;
        }
    }
    .search-form {
        text-align: center;
        margin-bottom: 15px;
        margin-top: 20px;
    }

    .search-form input[type="text"] {
        padding: 10px;
        width: 60%;
        max-width: 400px;
        border-radius: 30px;
        border: 2px solid #009688;
        font-size: 1rem;
        transition: border-color 0.3s ease;
    }

    .search-form input[type="text"]:focus {
        border-color: #4caf50;
        outline: none;
    }

    .search-form button {
        padding: 10px 20px;
        background-color: #4caf50;
        color: white;
        border: none;
        border-radius: 30px;
        margin-left: 10px;
        font-size: 1rem;
        cursor: pointer;
        transition: background 0.3s ease;
    }

    .search-form button:hover {
        background-color: #009688;
    }
</style>

<!-- Navbar -->
<nav class="navbar">
    <a class="navbar-brand" href="/">Warehouse Hub</a>
    <ul class="nav-links">
        <li class="nav-item"><a href="/warehouses/new">New Warehouse</a></li>
        <li class="nav-item"><a href="/">Home</a></li>
        <% if (!currentUser) { %>
            <li class="nav-item"><a href="/login">Login</a></li>
            <li class="nav-item"><a href="/register">Register</a></li>
        <% } else { %>
            <li class="nav-item"><a href="/logout">Logout</a></li>
        <% } %>
    </ul>
</nav>
<!-- Map Section -->
<div class="map-container">
    <div id="map" style="width: 100%; height: 100%;"></div>
</div>

<form action="/warehouses/search" method="GET" class="search-form" style="margin-bottom: 20px;">
    <label for="search">Search warehouses</label>
    <input 
      type="text" 
      id="search" 
      name="query" 
      placeholder="Search by name or location">
    <button type="submit">
      Search
    </button>
</form>

<!-- Warehouse List Section -->
<div class="container my-5">
    <h1 class="text-center text-success mb-5">Warehouse List</h1>
    <div class="card-container">
        <% for (let warehouse of warehouses) { %>
            <div class="card">
                <img
                    src="<%= warehouse.image || 'https://via.placeholder.com/300x200.png?text=No+Image+Available' %>"
                    alt="<%= warehouse.title %>"
                />
                <div class="card-body">
                    <h3 class="card-title"><%= warehouse.title %></h3>
                    <p class="card-text">
                        <%= warehouse.description || "No description available for this warehouse." %>
                    </p>
                    <a href="/warehouses/<%= warehouse._id %>" class="btn-outline-primary">View Details</a>
                </div>
            </div>
        <% } %>
    </div>
</div>

<!-- Footer -->
<footer class="footer">
    <p>Â© 2025 FarmersHub</p>
</footer>

<!-- Add your map related script here -->
<script>
    const maptilerApiKey = '<%- process.env.MAPTILER_API_KEY %>';
    const warehouses = { features: <%- JSON.stringify(warehouses) %> };

    maptilersdk.config.apiKey = maptilerApiKey;

    const map = new maptilersdk.Map({
        container: 'map', // This is the container ID for the map
        style: maptilersdk.MapStyle.BRIGHT,
        center: [77.5946, 12.9716], // Default center for map (can be updated)
        zoom: 5,
    });

    map.on('load', function () {
        map.addSource('warehouses', {
            type: 'geojson',
            data: warehouses,
            cluster: true,
            clusterMaxZoom: 14,
            clusterRadius: 50,
        });

        map.addLayer({
            id: 'clusters',
            type: 'circle',
            source: 'warehouses',
            filter: ['has', 'point_count'],
            paint: {
                'circle-color': [
                    'step',
                    ['get', 'point_count'],
                    '#00BCD4',
                    10,
                    '#2196F3',
                    30,
                    '#3F51B5'
                ],
                'circle-radius': [
                    'step',
                    ['get', 'point_count'],
                    15,
                    10,
                    20,
                    30,
                    25
                ]
            }
        });

        map.addLayer({
            id: 'cluster-count',
            type: 'symbol',
            source: 'warehouses',
            filter: ['has', 'point_count'],
            layout: {
                'text-field': '{point_count_abbreviated}',
                'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],
                'text-size': 12
            }
        });

        map.addLayer({
            id: 'unclustered-point',
            type: 'circle',
            source: 'warehouses',
            filter: ['!', ['has', 'point_count']],
            paint: {
                'circle-color': '#11b4da',
                'circle-radius': 4,
                'circle-stroke-width': 1,
                'circle-stroke-color': '#fff'
            }
        });

        map.on('click', 'clusters', async (e) => {
            const features = map.queryRenderedFeatures(e.point, {
                layers: ['clusters']
            });
            const clusterId = features[0].properties.cluster_id;
            const zoom = await map.getSource('warehouses').getClusterExpansionZoom(clusterId);
            map.easeTo({
                center: features[0].geometry.coordinates,
                zoom
            });
        });

        map.on('click', 'unclustered-point', function (e) {
            const { popUpMarkup } = e.features[0].properties;
            const coordinates = e.features[0].geometry.coordinates.slice();

            while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {
                coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;
            }

            new maptilersdk.Popup()
                .setLngLat(coordinates)
                .setHTML(popUpMarkup)
                .addTo(map);
        });

        map.on('mouseenter', 'clusters', () => {
            map.getCanvas().style.cursor = 'pointer';
        });
        map.on('mouseleave', 'clusters', () => {
            map.getCanvas().style.cursor = '';
        }); 
    });
</script>

<!-- Include MapTiler SDK -->
<script src="https://api.maptiler.com/maps/bright/{styleId}/tile.js?key=<%- process.env.MAPTILER_API_KEY %>"></script>


